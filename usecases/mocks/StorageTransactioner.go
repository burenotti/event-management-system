// Code generated by mockery v2.26.1. DO NOT EDIT.

package mocks

import (
	context "context"

	repositories "github.com/burenotti/rtu-it-lab-recruit/repositories"
	mock "github.com/stretchr/testify/mock"
)

// StorageTransactioner is an autogenerated mock type for the StorageTransactioner type
type StorageTransactioner struct {
	mock.Mock
}

// Atomic provides a mock function with given fields: ctx, f
func (_m *StorageTransactioner) Atomic(ctx context.Context, f repositories.AtomicFunc) error {
	ret := _m.Called(ctx, f)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, repositories.AtomicFunc) error); ok {
		r0 = rf(ctx, f)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewStorageTransactioner interface {
	mock.TestingT
	Cleanup(func())
}

// NewStorageTransactioner creates a new instance of StorageTransactioner. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewStorageTransactioner(t mockConstructorTestingTNewStorageTransactioner) *StorageTransactioner {
	mock := &StorageTransactioner{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
