// Code generated by mockery v2.26.1. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// LoginCodeStorage is an autogenerated mock type for the LoginCodeStorage type
type LoginCodeStorage struct {
	mock.Mock
}

// CreateLoginCode provides a mock function with given fields: ctx, userId, code
func (_m *LoginCodeStorage) CreateLoginCode(ctx context.Context, userId int64, code string) error {
	ret := _m.Called(ctx, userId, code)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, int64, string) error); ok {
		r0 = rf(ctx, userId, code)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MarkCodeUsed provides a mock function with given fields: ctx, userId, code
func (_m *LoginCodeStorage) MarkCodeUsed(ctx context.Context, userId int64, code string) error {
	ret := _m.Called(ctx, userId, code)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, int64, string) error); ok {
		r0 = rf(ctx, userId, code)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewLoginCodeStorage interface {
	mock.TestingT
	Cleanup(func())
}

// NewLoginCodeStorage creates a new instance of LoginCodeStorage. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewLoginCodeStorage(t mockConstructorTestingTNewLoginCodeStorage) *LoginCodeStorage {
	mock := &LoginCodeStorage{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
